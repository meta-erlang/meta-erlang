From ca957adbb7f4138a4dd6eec673e325e8e1796822 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jo=C3=A3o=20Henrique=20Ferreira=20de=20Freitas?=
 <joaohf@gmail.com>
Date: Thu, 4 Nov 2021 08:16:22 -0300
Subject: [PATCH] Detect libdlpi only when host_os is solaris

Upstream-Status: Inappropriate [OE specific]
---
 erts/configure.in | 87 +++++++++++++++++++++++++----------------------
 1 file changed, 46 insertions(+), 41 deletions(-)

diff --git a/erts/configure.in b/erts/configure.in
index d0ce30074f..c46768b0f9 100644
--- a/erts/configure.in
+++ b/erts/configure.in
@@ -1694,47 +1694,52 @@ fi
 AC_SUBST(SYSTEMD_DAEMON_LIBS)
 
 
-dnl ----------------------------------------------------------------------
-dnl Check the availability for libdlpi
-dnl ----------------------------------------------------------------------
-AC_CHECK_LIB(dlpi, dlpi_open)
-if test x"$ac_cv_lib_dlpi_dlpi_open" = x"no"; then
-   unset -v ac_cv_lib_dlpi_dlpi_open
-   dnl Try again now with -L/lib (or ditto 64) as argument to linker since
-   dnl gcc makes /usr/ccs/bin/ld ignore the crle configured linker default paths
-   dnl typically causing dlpi not being found on Solaris et.al
-   save_ldflags="$LDFLAGS"
-   try_dlpi_lib=/lib
-   if test x"$ac_cv_sizeof_void_p" = x"8"; then
-      if test -d /lib64; then
-	 try_dlpi_lib=/lib64
-      elif test -d /lib/64; then
-	 try_dlpi_lib=/lib/64
-      fi
-   fi
-   if test ! -f "$try_dlpi_lib/libdlpi.so" && \
-      test -f "$try_dlpi_lib/libdlpi.so.1"
-   then
-      dnl It looks like there is a missing symlink
-      dnl - let's be helpful and notify the user
-      dnl NOTE this help is far from perfect e.g if there would be no
-      dnl *.so.1 but a *.so.1.123 or *.so.2 this will be no help
-      AC_MSG_ERROR(
-	[Your OS installation is missing a symbolic link.
-	Maybe it lacks some development package(s)...
-	It can anyhow be fixed with the following command:
-	# ln -s libdlpi.so.1 $try_dlpi_lib/libdlpi.so
-	])
-   fi
-   LDFLAGS="-L$try_dlpi_lib -R$try_dlpi_lib $LDFLAGS"
-   unset -v try_dlpi_lib
-   AC_MSG_NOTICE([Extending the search to include /lib])
-   AC_CHECK_LIB(dlpi, dlpi_open)
-   if test x"$ac_cv_lib_dlpi_dlpi_open" = x"no"; then
-      LDFLAGS="$save_ldflags"
-   fi
-   unset -v save_ldflags
-fi
+case $host_os in
+  solaris*)
+    dnl ----------------------------------------------------------------------
+    dnl Check the availability for libdlpi
+    dnl ----------------------------------------------------------------------
+    AC_CHECK_LIB(dlpi, dlpi_open)
+    if test x"$ac_cv_lib_dlpi_dlpi_open" = x"no"; then
+       unset -v ac_cv_lib_dlpi_dlpi_open
+       dnl Try again now with -L/lib (or ditto 64) as argument to linker since
+       dnl gcc makes /usr/ccs/bin/ld ignore the crle configured linker default paths
+       dnl typically causing dlpi not being found on Solaris et.al
+       save_ldflags="$LDFLAGS"
+       try_dlpi_lib=/lib
+       if test x"$ac_cv_sizeof_void_p" = x"8"; then
+          if test -d /lib64; then
+	     try_dlpi_lib=/lib64
+          elif test -d /lib/64; then
+	     try_dlpi_lib=/lib/64
+          fi
+       fi
+       if test ! -f "$try_dlpi_lib/libdlpi.so" && \
+          test -f "$try_dlpi_lib/libdlpi.so.1"
+       then
+          dnl It looks like there is a missing symlink
+          dnl - let's be helpful and notify the user
+          dnl NOTE this help is far from perfect e.g if there would be no
+          dnl *.so.1 but a *.so.1.123 or *.so.2 this will be no help
+          AC_MSG_ERROR(
+	    [Your OS installation is missing a symbolic link.
+	    Maybe it lacks some development package(s)...
+	    It can anyhow be fixed with the following command:
+	    # ln -s libdlpi.so.1 $try_dlpi_lib/libdlpi.so
+	    ])
+       fi
+       LDFLAGS="-L$try_dlpi_lib -R$try_dlpi_lib $LDFLAGS"
+       unset -v try_dlpi_lib
+       AC_MSG_NOTICE([Extending the search to include /lib])
+       AC_CHECK_LIB(dlpi, dlpi_open)
+       if test x"$ac_cv_lib_dlpi_dlpi_open" = x"no"; then
+          LDFLAGS="$save_ldflags"
+       fi
+       unset -v save_ldflags
+    fi
+  ;;
+  *)
+esac  
 
 AC_CHECK_HEADER(sys/resource.h,
 	[AC_DEFINE(HAVE_SYS_RESOURCE_H, 1,
-- 
2.30.2

