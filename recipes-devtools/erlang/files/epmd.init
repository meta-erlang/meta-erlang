#! /bin/sh
### BEGIN INIT INFO
# Provides:          epmd
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Erlang Port Mapper Daemon
# Description:       Erlang Port Mapper Daemon
### END INIT INFO

NAME=epmd
DAEMON=/usr/sbin/epmd
SCRIPTNAME=/etc/init.d/$NAME
PIDFILE=/var/run/epmd.pid

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

#
# Function that starts the daemon/service
#
do_start()
{
    # Return
    #   0 if daemon has been started
    #   1 if daemon was already running
    #   2 if daemon could not be started

    # Startup with the appropriate user
    start-stop-daemon --start \
        --name epmd \
        --user epmd \
        --pidfile $PIDFILE \
        --make-pidfile \
        --exec $DAEMON \
        --background \
        || return 2
    return $?
}

#
# Function that stops the daemon/service
#
do_stop()
{
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    # Make sure it's down by using a more direct approach
    start-stop-daemon --stop \
                      --quiet \
                      --pidfile $PIDFILE
    return $?
}

#
# Function that graceful reload the daemon/service
#
do_reload() {
    do_stop
    do_start
}

# Checks the status of a node
do_status() {
    start-stop-daemon --stop \
                      --test \
                      --quiet \
                      --pidfile $PIDFILE \
                      && echo $"$NAME is running" && return 0
    echo $"$NAME is stopped" && return 2
}

case "$1" in
    start)
        [ "$VERBOSE" != no ] && echo -n "Starting $NAME"
        do_start
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && exit 0 ;;
            2) [ "$VERBOSE" != no ] && exit 1
                exit 1
                ;;
        esac
        ;;
    stop)
        [ "$VERBOSE" != no ] && echo -n "Stopping $NAME"
        do_stop
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && exit 0 ;;
            2) [ "$VERBOSE" != no ] && exit 1
                exit 1
                ;;
        esac
        ;;
    status)
        do_status
        ;;
    reload|force-reload)
        echo -n "Reloading $NAME"
        do_reload
        ES=$?
        exit $ES
        ;;
    restart)
        echo -n "Restarting $NAME"
        do_stop
        case "$?" in
            0|1)
                do_start
                case "$?" in
                    0)  exit 0 ;;
                    1)  exit 1 ;; # Old process is still running
                    *)  exit 1 ;; # Failed to start
                esac
                ;;
            *)
                # Failed to stop
                exit 1
                ;;
        esac
        ;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac

:
